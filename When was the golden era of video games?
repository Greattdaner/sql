--Find the ten best-selling games. The output should contain all the columns in the game_sales table and be sorted by the games_sold column in descending order. Save the output as best_selling_games.
SELECT *
FROM game_sales
ORDER BY games_sold DESC
LIMIT 10;

--Find the ten years with the highest average critic score, where at least four games were released (to ensure a good sample size). Return an output with the columns year, num_games released, and avg_critic_score. 
SELECT gs.year, COUNT(gs.name) AS num_games, ROUND(AVG(r.critic_score), 2) AS avg_critic_score
FROM game_sales AS gs
JOIN reviews AS r ON r.name = gs.name
GROUP BY gs.year
HAVING COUNT(gs.name) > 4
ORDER BY avg_critic_score DESC
LIMIT 10;

--Find the years where critics and users broadly agreed that the games released were highly rated. Specifically, return the years where the average critic score was over 9 OR the average user score was over 9.
SELECT c.year, c.num_games, c.avg_critic_score, u.avg_user_score, 
	GREATEST(c.avg_critic_score, u.avg_user_score) - LEAST(c.avg_critic_score, u.avg_user_score) AS diff
FROM critics_avg_year_rating AS c
JOIN users_avg_year_rating AS u
	ON u.year = c.year
WHERE c.avg_critic_score > 9 OR u.avg_user_score > 9
GROUP BY c.year, c.num_games, c.avg_critic_score, u.avg_user_score
ORDER BY c.year ASC;
